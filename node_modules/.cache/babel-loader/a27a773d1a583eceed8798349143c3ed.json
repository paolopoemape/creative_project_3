{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'ModalC',\n  props: {\n    store: Array,\n    center: Number,\n    value: {\n      required: true\n    }\n  },\n  methods: {\n    close: function close() {\n      this.$emit(\"input\", !this.value);\n    }\n  },\n  computed: {\n    showStore: function showStore() {\n      var id = this.$route.params.id;\n      var store = this.$root.$data.stores.find(function (p) {\n        return p.id == id;\n      });\n      var center = {\n        lat: store.lat,\n        lng: store.lng\n      };\n      return store;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAgBA;AACAA,gBADA;AAGAC;AACAC,gBADA;AAEAC,kBAFA;AAGAC;AACAC;AADA;AAHA,GAHA;AAUAC;AACAC,SADA,mBACA;AACA;AACA;AAHA,GAVA;AAeAC;AACAC,aADA,uBACA;AACA;AACA;AAAA;AAAA;AACA;AAAAC;AAAAC;AAAA;AAEA;AACA;AAPA;AAfA","names":["name","props","store","center","value","required","methods","close","computed","showStore","lat","lng"],"sourceRoot":"src/components","sources":["ModalC.vue"],"sourcesContent":["<template>\n      <div class=\"modal\" v-show=\"value\">\n        <div class=\"container\">\n            <GmapMap\n            :center='center'\n            :zoom='12'\n        style='width:100%;  height: 400px;'\n        />\n\n          <button @click.prevent=\"close\"\n class=\"mt-3 border-b border-teal font-semibold\">Close</button>\n        </div>\n      </div>\n    </template>\n\n    <script>\n        export default {\n            name: 'ModalC',\n          \n            props: {\n                store: Array,\n                center: Number,\n                value: {\n                    required: true,\n                }\n            },\n              methods: {\n                close() {\n                  this.$emit(\"input\", !this.value);\n                }\n            },\n            computed: {\n            showStore() {\n              const id = this.$route.params.id;\n              const store = this.$root.$data.stores.find((p) => p.id == id);\n              const center =  { lat: store.lat, lng: store.lng};\n\n              return store;\n            },\n          },\n        };\n    </script>\n\n\n    <style lang=\"css\" scoped>\n        .modal {\n          background-color: rgba(0, 0, 0, 0.7);\n          display: flex;\n\n      }\n    </style>\n"]},"metadata":{},"sourceType":"module"}